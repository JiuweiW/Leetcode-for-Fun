// @Author: 黄xing
// 求尾部为0的个数, 等价于乘积中包含5的个数。因为2的个数永远比5多
// 查看阶乘的数列： 1， 2， 3，4， 5， 6， 7， 8， 9， 10 ....
// 可以观察到每隔5个数字就包含一个5的倍数。因此至少有n / 5的0。
// 但这时候我们继续观察，还有25，50，75... 这种情况，他们除以5之后还剩，5，10，25...
// 他们公约数包含更多的5，解决这个问题，我用一个循环即可。
public class Solution {
    public int trailingZeroes(int n) {
        int res = 0;
        while (n >= 5) {
            res += n  / 5;
            n = n / 5;
        }
        return res;
    }
}